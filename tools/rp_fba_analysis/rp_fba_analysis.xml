<tool id="rp_fba_analysis" name="rpFbaAnalysis" version="@TOOL_VERSION@" profile="19.09">
    <description>Run OptGene, OptKnock with an heterologous pathway</description>
    <macros>
        <token name="@TOOL_VERSION@">1.0.1</token>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">rpfa</requirement>
    </requirements>
    <stdio>
        <regex match="WARNING" level="warning" />
        <regex match="ERROR" level="fatal" />
    </stdio>
    <command detect_errors="exit_code"><![CDATA[
        python -m rpfa
            --input-model-file '$model'
            #if $pathway:
                --input-pathway-file '$pathway'
            #end if
            #if $medium:
                --input-medium-file '$medium'
            #end if
            --biomass-rxn-id '$biomass_rxn_id'
            --target-rxn-id '$target_rxn_id'
            --strategy '$input_strategy.strategy'
            #if str($input_strategy.strategy) == "ko":
                --substrate-rxn-id '$input_strategy.substrate_rxn_id'
                #if $input_strategy.annotate:
                    --email "$__user_email__"
                #end if
            #end if
            --max-knockouts '$max_knockouts'
            --log-level ERROR
            --output-file '$output_csv'
    ]]></command>
    <inputs>
        <param name="model" type="data" format="sbml" label="Chassis model file" />
        <param name="pathway" type="data" format="sbml" label="Pathway file" optional="True" />
        <param name="medium" type="data" format="csv" label="Medium file" optional="True" />

        <param name="biomass_rxn_id" type="text" label="Biomass reaction ID" value="" >
            <validator type="empty_field" message="Biomass reaction ID is required"/>
            <validator type="regex" message="No special characters allowed">^(?:[a-zA-Z_])(?:[\w.-])*$</validator>
        </param>
        <param name="target_rxn_id" type="text" label="Target reaction ID" value="" >
            <validator type="empty_field" message="Target reaction ID is required"/>
            <validator type="regex" message="No special characters allowed">^(?:[a-zA-Z_])(?:[\w.-])*$</validator>
        </param>
        <conditional name="input_strategy">
            <param name="strategy" type="select" label="Strategy">
                <option value="ko" selected="True">Gene knockouts</option>
                <option value="ou" >Reaction knockouts</option>
            </param>
            <when value="ko">
                <param name="substrate_rxn_id" type="text" label="Substrate reaction ID" value="" >
                    <validator type="empty_field" message="Substrate reaction ID is required"/>
                    <validator type="regex" message="No special characters allowed">^(?:[a-zA-Z_])(?:[\w.-])*$</validator>
                </param>
                <param name="annotate" type="boolean" label="Annotate the genes" checked="false" help="Your email address will be used to query the NCBI website" />
            </when>
            <when value="ou">
            </when>
        </conditional>
        <param name="max_knockouts" type="integer" value="3" min="1" max="10" label="Number of items deleted to consider" />
    </inputs>
    <outputs>
        <data name="output_csv" format="csv" label="${tool.name}(${input_strategy.strategy})" />
    </outputs>
    <tests>
        <test>
        <!-- test 1: check if identical outputs are produced with R_BIOMASS__3 biomass name ID and BiGG model (iCN718)  -->
            <param name="model" value="iAF1260.xml.gz" />
            <param name="pathway" value="butanol.xml" />
            <param name="medium" value="butanol.csv" />
            <param name="biomass_rxn_id" value="BIOMASS_Ec_iAF1260_core_59p81M" />
            <param name="target_rxn_id" value="EX_1btol_e" />
            <param name="substrate_rxn_id" value="EX_glc__D_e" />
            <output name="output_csv" >
                <assert_contents>
                    <has_line line="reactions,genes,size,fva_min,fva_max,target_flux,biomass_flux,yield,fitness" />
                </assert_contents>
            </output>
        </test>
    </tests>
    <help><![CDATA[
rpFbaAnalysis
=============

Provides a cli interface to run OptGene, OptKnock with an heterologous pathway

Input
-----

Required:

* **model**\ : (string) SBML file that contains chassis
* **pathway**\ : (string) SBML file that contains an heterologous pathway
* **biomass_rxn_id**\ : (string) Biomass reaction id
* **target_rxn_id**\ : (string) Reaction id to maximize
* **substrate_rxn_id**\ : (string) Substrate used
* **output_csv**\ : (string) Path to the output file

Strategy:

* **strategy**\ : (string, default=ko) Strategy to apply: knockout genes or reactions

If the strategy is to knockout genes:

* **substrate_rxn_id**\ : (string) Substrate reaction id to use
* **email**\ : (string) Use an email adress to annotate genes with NCBI website

Optional:

* **medium**\ : (string) CSV file that contains medium configuration "Reaction id, lower_bound, upper_bound"
* **max_knockouts**\ : (integer, default=3) Number of items to delete in the same time


Project Links
---------------------

* `GitHub rpFbaAnalysis <https://github.com/brsynth/rpFbaAnalysis>`_
* `Github Cameo <https://github.com/biosustain/cameo>`_

Authors
-------

* **Guillaume Gricourt**

License
-------

Apache 2.0
    ]]></help>
    <citations>
        <citation type="bibtex">@online{rpFbaAnalysis,
            author = {BioRetroSynth group},
            title = {rpFbaAnalysis},
            url = {https://github.com/brsynth/rpFbaAnalysis},
        </citation>
    </citations>
</tool>
