<tool id="rpbasicdesign" name="BasicDesign" version="@TOOL_VERSION@" profile="19.09">
    <description>Build DNA-BOT input files from rpSBML</description>
    <macros>
        <token name="@TOOL_VERSION@">0.3.4</token>
    </macros>
    <requirements>
        <requirement type="package" version="@TOOL_VERSION@">rpbasicdesign</requirement>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
        python -m rpbasicdesign.cli
        --rpsbml_file '$rpsbml_file'
        #if $adv.parts_files
            #set files = '" "'.join([str($file) for $file in $adv.parts_files])
            --parts_files "${files}"
        #end if
        --lms_id '$adv.lms_id'
        --lmp_id '$adv.lmp_id'
        --backbone_id '$backbone_id'
        --sample_size '$sample_size'
        #if str($adv.cds_permutation) == "true"
            --cds_permutation true
        #else
            --cds_permutation false
        #end if
        --o_dnabot_dir 'out/dnabot_in'
        --o_sbol_dir 'out/sbol_export'
    ]]></command>
    <inputs>
        <param name="rpsbml_file" type="data" format="xml" label="rpSBML file"/>
        <param name="backbone_id" type="text" value="BASIC_SEVA_37_CmR-p15A.1" label="Backbone part ID" />
        <param name="sample_size" type="integer" value="88" label="Number of constructs to generate" />
        <section name="adv" title="Advanced Options" expanded="false">
            <param name="parts_files" type="data" format="csv" optional="true" multiple="true" label="Linkers and user parts" />
            <param name="lms_id" type="text" value="LMS" label="LMS part ID" />
            <param name="lmp_id" type="text" value="LMP" label="LMP part ID" />
            <param name="cds_permutation" type="boolean" label="Perform CDS permutation?" checked="true" />
        </section>
    </inputs>
    <outputs>
        <data name="Constructs" format="csv" from_work_dir="out/dnabot_in/constructs.csv" label="${tool.name} - ${rpsbml_file.name}: constructs" />
        <data name="User parts plate" format="csv" from_work_dir="out/dnabot_in/user_parts_plate.csv" label="${tool.name} - ${rpsbml_file.name}: User parts plate"/>
        <data name="Biolegio plate" format="csv" from_work_dir="out/dnabot_in/biolegio_plate.csv" label="${tool.name} - ${rpsbml_file.name}: Biolegio plate"/>
        <collection name="sbol_dir" type="list" label="${tool.name} - ${rpsbml_file.name}: SBOL constructs">
            <discover_datasets pattern="__designation_and_ext__" format="xml" directory="out/sbol_export" />
        </collection>
    </outputs>
    <tests>
        <test>
        <!-- test 1: check if identical outputs are produced -->
        <param name="rpsbml_file" value="lycopene_CrtEBI_from_selenzy.xml" />
        <param name="sample_size" value="3" />
        <output name="Constructs" file="constructs.csv" ftype="csv" compare="diff"/>
        <output name="User parts plate" file="user_parts_plate.csv" ftype="csv" compare="diff"/>
        <output name="Biolegio plate" file="biolegio_plate.csv" ftype="csv" compare="diff"/>
        <output_collection name="sbol_dir" type="list">
            <element name="BASIC_construct_A1" ftype="xml" value="BASIC_construct_A1.xml" sort="true"/>
            <element name="BASIC_construct_B1" ftype="xml" value="BASIC_construct_B1.xml" sort="true"/>
            <element name="BASIC_construct_C1" ftype="xml" value="BASIC_construct_C1.xml" sort="true"/>
        </output_collection>
        </test>
    </tests>
    <help><![CDATA[
rpbasicdesign
================

Convert rpSBML enzyme info in to BASIC construct. UniProt IDs corresponding
enzyme variants are extracted rpSBMl files. Promoters and RBSs are randomly
chosen from a default list. CDSs, in other words gene variants, of enzymes are
randomly chosen from amongst the UniProt IDs extracted. Constructs generated
can be stored as (i) a CSV file ready to be used by DNA-Bot, (ii) as SBOL
files.

Input
-----

Required:

* **rpsbml_file**\ : (string) rpSBML file from which enzymes UniProt IDs will be collected.

Advanced options:

* **parts_files**\ : (string) List of files providing available linkers and user parts (backbone, promoters, ...) for constructs. Default: [data/biolegio_parts.csv, user_parts.csv]
* **lms_id**\ : (string) part ID to be used as the LMS methylated linker. Default: LMS.
* **lmp_id**\ : (string) part ID to be used as the LMP methylated linker. Default: LMP.
* **backbone_id**\ : (string) part ID to be used as the backbone. Default: BASIC_SEVA_37_CmR-p15A.1.
* **sample_size**\ : (int) Number of construct to generate.Default: 3.
* **cds_permutation**\ : (boolean) Whether all combinations of CDS permutation should be built Default: true.

Output
------

* **o_dnabot_dir**\ : (string) Output folder to write construct and plate files. It will be created if it does not exist yet. Existing files will be overwritten. Default: out/dnabot_in.
* **o_sbol_dir**\ : (string) Output folder to write SBOL depictions of constructs. It will be created if it does not exist yet. Existing files will be overwritten. Default: out/sbol_export.

Project Links
------------------

* `GitHub <https://github.com/brsynth/rpbasicdesign>`_

License
-------

* `MIT <https://github.com/brsynth/rpbasicdesign/blob/master/LICENSE.txt>`_

    ]]></help>
    <citations>
        <citation type="doi">10.1093/synbio/ysaa010</citation>
    </citations>
</tool>